<div class="min-h-screen bg-gray-50 py-12">
  <div class="max-w-5xl mx-auto px-4">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-3xl font-bold text-gray-900 mb-4">
        채용공고 AI 분석기
      </h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        채용공고 URL을 입력하면 AI가 핵심 키워드와 요구 역량을 자동으로 분석해드립니다
      </p>
      <!-- Links -->
      <div class="mt-6 flex justify-center gap-4">
        <a href="/cover_letters/saved_job_analyses" 
           class="inline-flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white font-medium px-6 py-3 rounded-lg transition-colors shadow-md hover:shadow-lg">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"></path>
          </svg>
          저장된 분석 보기
        </a>
        <a href="/cover_letters/company_analysis" 
           class="inline-flex items-center gap-2 bg-purple-600 hover:bg-purple-700 text-white font-medium px-6 py-3 rounded-lg transition-colors shadow-md hover:shadow-lg">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
          </svg>
          기업 심층 분석
        </a>
      </div>
    </div>

    <!-- Features Grid -->
    <div class="grid md:grid-cols-3 gap-4 mb-8">
      <div class="bg-white rounded-lg border border-gray-200 p-4">
        <div class="flex items-center mb-2">
          <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
          <h3 class="font-semibold text-gray-900">핵심 키워드 추출</h3>
        </div>
        <p class="text-sm text-gray-600">채용공고에서 가장 중요한 키워드를 자동으로 파악합니다</p>
      </div>
      <div class="bg-white rounded-lg border border-gray-200 p-4">
        <div class="flex items-center mb-2">
          <div class="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
          <h3 class="font-semibold text-gray-900">요구 역량 분석</h3>
        </div>
        <p class="text-sm text-gray-600">필수 역량과 우대사항을 체계적으로 정리합니다</p>
      </div>
      <div class="bg-white rounded-lg border border-gray-200 p-4">
        <div class="flex items-center mb-2">
          <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
          <h3 class="font-semibold text-gray-900">인재상 도출</h3>
        </div>
        <p class="text-sm text-gray-600">기업이 원하는 인재상과 핵심 가치를 분석합니다</p>
      </div>
    </div>

    <!-- URL Input Form -->
    <div class="bg-white rounded-xl border border-gray-200 p-6 mb-8">
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">채용공고 URL 입력</label>
        <div class="relative">
          <input 
            type="url" 
            id="job-url" 
            placeholder="https://www.saramin.co.kr/zf_user/jobs/relay/view?isMypage=no&rec_idx=..." 
            class="w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-gray-900"
          />
          <div class="absolute left-4 top-1/2 transform -translate-y-1/2">
            <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
            </svg>
          </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">지원 사이트: 사람인, 잡코리아, 원티드, 인크루트, 잡플래닛 등</p>
      </div>
      
      <!-- Optional: Add job details for Samsung careers -->
      <div class="p-4 bg-blue-50 rounded-lg mb-6">
        <p class="text-sm text-blue-800 mb-2">
          <strong>💡 더 편한 방법을 원하시나요?</strong>
        </p>
        <div class="space-y-2">
          <p class="text-sm text-blue-700">
            🔖 <a href="/cover_letters/bookmarklet" class="underline font-semibold">북마크릿 설치</a> - 채용 사이트에서 원클릭 분석
          </p>
          <p class="text-sm text-blue-700">
            📝 <a href="/cover_letters/job_posting_text" class="underline font-semibold">텍스트 직접 입력</a> - URL 분석이 안 될 때
          </p>
        </div>
      </div>
      
      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">추가 정보 (선택)</label>
        <input 
          type="text" 
          id="job-title" 
          placeholder="예: 삼성물산 패션부문 경력사원 채용(퍼포먼스마케팅, CRM, 브랜드마케팅)" 
          class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-gray-900"
        />
      </div>

      <!-- Analysis Type Selection -->
      <div class="mb-6 p-4 bg-gradient-to-r from-purple-50 to-indigo-50 rounded-lg">
        <label class="block text-sm font-medium text-gray-700 mb-3">분석 유형 선택</label>
        <div class="grid grid-cols-2 gap-3">
          <label class="relative cursor-pointer">
            <input type="radio" name="analysis-type" value="basic" class="sr-only peer" checked>
            <div class="p-4 border-2 rounded-lg peer-checked:border-blue-500 peer-checked:bg-blue-50 hover:bg-gray-50 transition-all">
              <div class="font-medium text-gray-900 mb-1">⚡ 기본 분석</div>
              <div class="text-xs text-gray-600">
                • 빠른 분석 (10-30초)<br>
                • 핵심 키워드 추출<br>
                • 요구 역량 분석<br>
                • 기본 전략 제공
              </div>
            </div>
          </label>
          
          <label class="relative cursor-pointer">
            <input type="radio" name="analysis-type" value="enhanced" class="sr-only peer">
            <div class="p-4 border-2 rounded-lg peer-checked:border-purple-500 peer-checked:bg-purple-50 hover:bg-gray-50 transition-all">
              <div class="font-medium text-gray-900 mb-1">🚀 강화 분석 <span class="text-xs bg-purple-200 text-purple-700 px-2 py-0.5 rounded-full ml-1">Premium</span></div>
              <div class="text-xs text-gray-600">
                • 기업 최신 이슈 분석 ⭐<br>
                • 맥락 기반 전략 (핵심)<br>
                • 3000자+ 상세 가이드<br>
                • 대기업은 경쟁사 분석 포함
              </div>
            </div>
          </label>
        </div>
        <p class="mt-3 text-xs text-gray-500">
          💡 <strong>팁:</strong> 처음에는 기본 분석으로 빠르게 확인 후, 필요시 강화 분석을 사용하세요.
        </p>
      </div>

      <button 
        id="analyze-btn" 
        type="button"
        class="w-full px-5 py-2.5 bg-blue-600 text-white font-medium text-sm rounded-lg hover:bg-blue-700 transition-all shadow-sm hover:shadow-md"
      >
        채용공고 분석 시작
      </button>
    </div>

    <!-- Loading State -->
    <div id="loading-state" class="hidden">
      <div class="bg-white rounded-xl border border-gray-200 p-8">
        <div class="flex flex-col items-center">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"></div>
          <p class="text-base font-medium text-gray-900">채용공고를 분석하고 있습니다...</p>
          <p class="text-sm text-gray-500 mt-2">잠시만 기다려주세요 (약 10-30초 소요)</p>
        </div>
      </div>
    </div>

    <!-- Analysis Result -->
    <div id="analysis-result" class="hidden">
      <div class="bg-white rounded-xl border border-gray-200 overflow-hidden">
        <div class="border-b border-gray-200 px-6 py-4">
          <h2 class="text-xl font-bold text-gray-900">채용공고 분석 결과</h2>
        </div>
        <div class="p-6">
          <div id="result-content" class="space-y-6">
            <!-- Analysis content will be inserted here -->
          </div>
          
          <!-- Action Buttons -->
          <div class="mt-6 pt-6 border-t border-gray-200">
            <div class="flex flex-col sm:flex-row gap-3">
              <button 
                id="use-for-cover-letter" 
                class="flex-1 px-5 py-2.5 bg-blue-600 text-white font-medium text-sm rounded-lg hover:bg-blue-700 transition-all"
              >
                이 분석 결과로 자소서 작성하기
              </button>
              <button 
                id="analyze-another" 
                class="flex-1 px-5 py-2.5 bg-white border border-gray-300 text-gray-700 font-medium text-sm rounded-lg hover:bg-gray-50 transition-all"
              >
                다른 채용공고 분석하기
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tips Section -->
    <div class="mt-8 bg-gray-50 rounded-xl p-6">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">활용 팁</h3>
      <ul class="space-y-3 text-gray-700">
        <li class="flex items-start">
          <svg class="w-5 h-5 text-indigo-600 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span>분석된 핵심 키워드를 자소서에 자연스럽게 포함시키세요</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 text-indigo-600 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span>요구 역량과 매칭되는 본인의 경험을 구체적으로 작성하세요</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 text-indigo-600 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span>기업이 원하는 인재상과 본인의 가치관을 연결지어 표현하세요</span>
        </li>
        <li class="flex items-start">
          <svg class="w-5 h-5 text-indigo-600 mr-2 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          <span>분석 결과를 바탕으로 면접 예상 질문도 미리 준비하세요</span>
        </li>
      </ul>
    </div>
  </div>
</div>

<script>
(function() {
  'use strict';
  
  // Wait for DOM to be ready
  function ready(fn) {
    if (document.readyState !== 'loading') {
      fn();
    } else {
      document.addEventListener('DOMContentLoaded', fn);
    }
  }
  
  ready(function() {
    console.log('Page ready, initializing job posting analyzer...');
    
    // 자동 분석 체크 (북마크릿에서 온 경우)
    <% if @auto_analyze && @auto_url %>
    console.log('Auto-analyze detected from bookmarklet');
    setTimeout(function() {
      document.getElementById('job-url').value = '<%= @auto_url %>';
      document.getElementById('analyze-btn').click();
    }, 500);
    <% end %>
    
    const analyzeBtn = document.getElementById('analyze-btn');
    const urlInput = document.getElementById('job-url');
    const jobTitleInput = document.getElementById('job-title');
    const loadingState = document.getElementById('loading-state');
    const resultDiv = document.getElementById('analysis-result');
    const resultContent = document.getElementById('result-content');
    
    if (!analyzeBtn) {
      console.error('Analyze button not found!');
      return;
    }
    
    console.log('Button found, adding click listener...');
    
    // Main analyze function
    analyzeBtn.addEventListener('click', async function(e) {
      e.preventDefault();
      console.log('Button clicked!');
      
      const url = urlInput.value.trim();
      const jobTitle = jobTitleInput ? jobTitleInput.value.trim() : '';
      
      // Get selected analysis type
      const analysisType = document.querySelector('input[name="analysis-type"]:checked').value;
      const useEnhanced = analysisType === 'enhanced';
      
      console.log('URL:', url);
      console.log('Job Title:', jobTitle);
      console.log('Analysis Type:', analysisType);
      
      if (!url) {
        alert('채용공고 URL을 입력해주세요.');
        return;
      }
      
      if (!url.startsWith('http://') && !url.startsWith('https://')) {
        alert('올바른 URL 형식으로 입력해주세요. (http:// 또는 https://로 시작)');
        return;
      }
      
      // Show loading with different message based on analysis type
      console.log('Showing loading state...');
      loadingState.classList.remove('hidden');
      const loadingMessage = loadingState.querySelector('p.text-sm');
      if (loadingMessage) {
        loadingMessage.textContent = useEnhanced ? 
          '강화 분석을 수행하고 있습니다... (약 1-2분 소요)' : 
          '기본 분석을 수행하고 있습니다... (약 10-30초 소요)';
      }
      resultDiv.classList.add('hidden');
      analyzeBtn.disabled = true;
      analyzeBtn.style.opacity = '0.5';
      
      try {
        console.log('Sending request...');
        
        // Get CSRF token
        const csrfToken = document.querySelector('meta[name="csrf-token"]');
        const token = csrfToken ? csrfToken.content : '';
        
        const response = await fetch('/cover_letters/analyze_job_posting', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': token,
            'Accept': 'application/json'
          },
          body: JSON.stringify({ 
            url: url, 
            job_title: jobTitle, 
            use_enhanced: useEnhanced ? 'true' : 'false' 
          })
        });
        
        console.log('Response received:', response.status);
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        console.log('Data received:', data);
        
        if (data.success) {
          // Check if fallback occurred
          if (data.fallback_reason) {
            alert(data.fallback_reason);
          }
          
          // Store analysis ID for save functionality
          window.currentAnalysisId = data.analysis_id;
          
          // Display results
          displayResults(data.analysis);
          loadingState.classList.add('hidden');
          resultDiv.classList.remove('hidden');
          
          // Create save button container
          const saveContainer = document.createElement('div');
          saveContainer.className = 'flex items-center justify-between mb-4';
          
          // Add indicator if enhanced analysis was used
          const badge = document.createElement('span');
          badge.className = data.is_enhanced ? 
            'inline-block bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm font-medium' :
            'inline-block bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm font-medium';
          badge.textContent = data.is_enhanced ? '🚀 강화 분석 결과' : '⚡ 기본 분석 결과';
          
          // Add save button
          const saveBtn = document.createElement('button');
          saveBtn.id = 'save-analysis-btn';
          saveBtn.className = 'bg-green-600 hover:bg-green-700 text-white font-medium px-4 py-2 rounded-lg transition-colors flex items-center gap-2';
          saveBtn.innerHTML = '<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V2"></path></svg>분석 저장';
          saveBtn.onclick = saveAnalysis;
          
          saveContainer.appendChild(badge);
          saveContainer.appendChild(saveBtn);
          resultContent.prepend(saveContainer);
          
          resultDiv.scrollIntoView({ behavior: 'smooth' });
        } else {
          throw new Error(data.error || '분석 실패');
        }
        
      } catch (error) {
        console.error('Error:', error);
        alert('오류가 발생했습니다: ' + error.message);
        loadingState.classList.add('hidden');
      } finally {
        analyzeBtn.disabled = false;
        analyzeBtn.style.opacity = '1';
      }
    });
    
    // Display results function - handles both enhanced and regular analysis
    function displayResults(analysis) {
      if (!analysis) return;
      
      // Check if this is enhanced analysis (object) or regular analysis (string)
      if (typeof analysis === 'object' && analysis.cover_letter_strategy) {
        displayEnhancedResults(analysis);
      } else {
        displayRegularResults(analysis);
      }
    }
    
    // Display enhanced analysis results
    function displayEnhancedResults(analysis) {
      let html = '<div class="space-y-6">';
      
      // Check for v3 structure (6 sections)
      if (analysis.sections) {
        // v3 structure - display 6 sections
        html += `
          <div class="bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">🚀</span>
              초디테일 채용공고 분석 (6개 섹션)
            </h3>
        `;
        
        const sectionTitles = {
          company_overview: '1. 기업 개요 & 산업 포지션',
          job_context: '2. 채용공고 기본 정보 & 맥락',
          job_requirements: '3. 직무 분석 & 요구 역량',
          preparation_strategy: '4. 취업 준비 전략',
          competition_analysis: '5. 경쟁사 비교 & 차별화',
          consultant_summary: '6. 핵심 요약 & 컨설턴트 조언'
        };
        
        for (const [key, title] of Object.entries(sectionTitles)) {
          if (analysis.sections[key]) {
            html += `
              <div class="mt-6 pl-4 border-l-4 border-indigo-500">
                <h4 class="font-semibold text-lg mb-3">${title}</h4>
                <div class="prose prose-sm max-w-none">
                  ${formatMarkdown(analysis.sections[key])}
                </div>
              </div>
            `;
          }
        }
        
        html += '</div>';
      }
      // Check for v2 structure
      else if (analysis.comprehensive_analysis) {
        html += `
          <div class="bg-gradient-to-r from-yellow-50 to-red-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">🔥</span>
              초디테일 분석 (4,500자+)
            </h3>
            <div class="prose prose-sm max-w-none">
              ${formatMarkdown(analysis.comprehensive_analysis)}
            </div>
          </div>
        `;
      }
      // Original structure
      else if (analysis.company_context) {
        html += `
          <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">🎯</span>
              기업 맥락 분석
            </h3>
            <div class="space-y-4">
              ${analysis.company_context.current_issues ? `
                <div>
                  <h4 class="font-semibold text-gray-800 mb-2">현재 이슈</h4>
                  <ul class="space-y-1">
                    ${analysis.company_context.current_issues.map(issue => 
                      `<li class="text-sm text-gray-700 flex items-start">
                        <span class="text-blue-500 mr-2">•</span>
                        <span>${issue}</span>
                      </li>`
                    ).join('')}
                  </ul>
                </div>
              ` : ''}
              ${analysis.company_context.urgent_needs ? `
                <div>
                  <h4 class="font-semibold text-gray-800 mb-2">긴급 니즈</h4>
                  <ul class="space-y-1">
                    ${analysis.company_context.urgent_needs.map(need => 
                      `<li class="text-sm text-gray-700 flex items-start">
                        <span class="text-red-500 mr-2">⚡</span>
                        <span>${need}</span>
                      </li>`
                    ).join('')}
                  </ul>
                </div>
              ` : ''}
            </div>
          </div>
        `;
      }
      
      // Cover Letter Strategy Section (대폭 강화)
      if (analysis.cover_letter_strategy) {
        html += `
          <div class="bg-white rounded-xl border-2 border-indigo-200 overflow-hidden">
            <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
              <h3 class="text-xl font-bold text-white flex items-center gap-2">
                <span class="text-2xl">📝</span>
                자소서 작성 전략 (강화 버전)
              </h3>
            </div>
            <div class="p-6">
              <div class="prose prose-lg max-w-none">
                ${formatEnhancedStrategy(analysis.cover_letter_strategy)}
              </div>
            </div>
          </div>
        `;
      }
      
      // Differentiation Guide Section
      if (analysis.differentiation_guide) {
        html += `
          <div class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">🎯</span>
              차별화 전략
            </h3>
            <div class="prose max-w-none">
              ${formatDifferentiationGuide(analysis.differentiation_guide)}
            </div>
          </div>
        `;
      }
      
      // Customization Guide Section  
      if (analysis.customization_guide) {
        html += `
          <div class="bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">✨</span>
              커스터마이징 가이드
            </h3>
            <div class="prose max-w-none">
              ${formatCustomizationGuide(analysis.customization_guide)}
            </div>
          </div>
        `;
      }
      
      // Interview Insights Section
      if (analysis.interview_insights) {
        html += `
          <div class="bg-yellow-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">💡</span>
              면접 대비 인사이트
            </h3>
            <div class="prose max-w-none">
              ${formatContent(analysis.interview_insights)}
            </div>
          </div>
        `;
      }
      
      // Risks and Warnings Section
      if (analysis.risks_and_warnings) {
        html += `
          <div class="bg-red-50 rounded-xl p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
              <span class="text-2xl">⚠️</span>
              주의사항
            </h3>
            <div class="prose max-w-none text-red-900">
              ${formatContent(analysis.risks_and_warnings)}
            </div>
          </div>
        `;
      }
      
      html += '</div>';
      resultContent.innerHTML = html;
    }
    
    // Format enhanced strategy content with better styling
    function formatEnhancedStrategy(strategy) {
      if (!strategy) return '';
      
      return strategy
        .replace(/###\s*(.*?)$/gm, '<h3 class="text-lg font-bold text-indigo-700 mt-6 mb-3 border-b border-indigo-200 pb-2">$1</h3>')
        .replace(/####\s*(.*?)$/gm, '<h4 class="text-base font-semibold text-gray-800 mt-4 mb-2">$1</h4>')
        .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-indigo-600">$1</strong>')
        .replace(/```([^`]+)```/g, '<div class="bg-gray-100 rounded-lg p-4 my-3 font-mono text-sm">$1</div>')
        .replace(/\|([^|]+)\|([^|]+)\|([^|]+)\|/g, function(match, p1, p2, p3) {
          return `<div class="grid grid-cols-3 gap-2 my-2 text-sm">
            <div class="bg-gray-100 p-2 rounded">${p1.trim()}</div>
            <div class="bg-gray-100 p-2 rounded">${p2.trim()}</div>
            <div class="bg-gray-100 p-2 rounded">${p3.trim()}</div>
          </div>`;
        })
        .replace(/^[•\-]\s*(.*?)$/gm, '<li class="ml-4 mb-2 text-gray-700">$1</li>')
        .replace(/^(\d+)\.\s*(.*?)$/gm, '<div class="ml-4 mb-3"><span class="inline-block w-6 h-6 bg-indigo-100 text-indigo-700 rounded-full text-center text-sm font-bold mr-2">$1</span>$2</div>')
        .replace(/\n\n/g, '</p><p class="mb-4 text-gray-700 leading-relaxed">');
    }
    
    // Format differentiation guide with visual elements
    function formatDifferentiationGuide(guide) {
      if (!guide) return '';
      
      return guide
        .replace(/###\s*(.*?)$/gm, '<h3 class="text-lg font-bold text-green-700 mt-4 mb-3">$1</h3>')
        .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-green-600">$1</strong>')
        .replace(/❌/g, '<span class="text-red-500 text-xl">❌</span>')
        .replace(/✅/g, '<span class="text-green-500 text-xl">✅</span>')
        .replace(/```([^`]+)```/g, '<div class="bg-white border border-gray-300 rounded-lg p-4 my-3">$1</div>')
        .replace(/\n\n/g, '</p><p class="mb-3 text-gray-700">');
    }
    
    // Format customization guide
    function formatCustomizationGuide(guide) {
      if (!guide) return '';
      
      return guide
        .replace(/###\s*(.*?)$/gm, '<h3 class="text-lg font-bold text-purple-700 mt-4 mb-3">$1</h3>')
        .replace(/####\s*(.*?)$/gm, '<h4 class="text-base font-semibold text-purple-600 mt-3 mb-2">$1</h4>')
        .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-purple-600">$1</strong>')
        .replace(/□/g, '<input type="checkbox" class="mr-2">')
        .replace(/\n\n/g, '</p><p class="mb-3 text-gray-700">');
    }
    
    // Display regular analysis results with clean UI matching company analysis
    function displayRegularResults(analysis) {
      let html = '<div class="max-w-7xl mx-auto">';
      
      // Check if analysis is an object (new v3 structure) or string
      let sections;
      if (typeof analysis === 'object' && analysis.sections) {
        // v3 structure with 6 sections
        sections = Object.values(analysis.sections);
      } else if (typeof analysis === 'string') {
        // Parse sections from string (old structure)
        sections = analysis.split(/(?=##\s)/);
      } else {
        sections = [];
      }
      
      // Parse company name and position from the analysis
      let companyName = '분석된 기업';
      let position = '분석된 직무';
      
      // Try to extract company and position from the first section or header
      const firstSection = sections[0] || '';
      const companyMatch = firstSection.match(/\*\*회사명\*\*[:\s]*([^\n]+)/);
      const positionMatch = firstSection.match(/\*\*채용 직무\*\*[:\s]*([^\n]+)/);
      
      if (companyMatch) {
        companyName = companyMatch[1].replace(/[•\*]/g, '').trim();
      }
      if (positionMatch) {
        position = positionMatch[1].replace(/[•\*]/g, '').trim();
      }
      
      // Clean header without gradient
      html += `
        <div class="bg-white rounded-lg border border-gray-200 p-6 mb-6">
          <h1 class="text-2xl font-bold text-gray-900">📊 채용공고 분석 결과</h1>
          <p class="text-gray-600 mt-2">${companyName} - ${position} (${new Date().toLocaleDateString('ko-KR')} 기준)</p>
        </div>
      `;
      
      // Main sections with clean design
      html += '<div class="space-y-6">';
      
      // Define section icons for new structure
      const sectionIcons = {
        '1. 공고 기본 정보': '📋',
        '2. 핵심 특징 및 장점': '⭐',
        '3. 유의해야 할 점': '⚠️',
        '4. 지원 전략': '🎯',
        '5. 요약': '📌'
      };
      
      // Process all sections into organized cards
      sections.forEach(section => {
        if (!section.trim()) return;
        
        const lines = section.split('\n');
        const titleMatch = lines[0].match(/##\s*(.*)/);
        
        if (titleMatch) {
          const title = titleMatch[1].trim();
          const icon = sectionIcons[title] || '📄';
          const content = lines.slice(1).join('\n');
          
          // Create clean card for each section
          html += createCleanSection(icon, title, content);
        }
      });
      
      html += '</div>'; // Close space-y-6
      
      // Action buttons at the bottom
      html += `
        <div class="bg-white rounded-lg border border-gray-200 p-6 mt-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">다음 단계</h3>
          <div class="flex flex-wrap gap-3">
            <button id="use-for-cover-letter-bottom" 
                    class="px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors">
              이 분석으로 자소서 작성하기
            </button>
            <button id="analyze-another-bottom" 
                    class="px-6 py-3 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium rounded-lg transition-colors">
              다른 채용공고 분석하기
            </button>
          </div>
        </div>
      `;
      
      html += '</div>'; // Close max-w-7xl
      
      // Apply the formatted HTML
      resultContent.innerHTML = html;
      
      // Initialize tab functionality
      setTimeout(() => {
        const tabButtons = document.querySelectorAll('.tab-btn-job');
        const tabContents = document.querySelectorAll('.tab-content-job');
        
        tabButtons.forEach(button => {
          button.addEventListener('click', (e) => {
            e.preventDefault();
            const targetTab = button.dataset.tab;
            
            // Update button states
            tabButtons.forEach(btn => {
              btn.classList.remove('active', 'border-indigo-600', 'text-indigo-600', 'border-b-2');
              btn.classList.add('text-gray-600', 'border-transparent');
            });
            button.classList.add('active', 'border-indigo-600', 'text-indigo-600', 'border-b-2');
            button.classList.remove('text-gray-600', 'border-transparent');
            
            // Update content visibility
            tabContents.forEach(content => {
              content.classList.add('hidden');
            });
            
            const targetContent = document.getElementById(`${targetTab}-tab`);
            if (targetContent) {
              targetContent.classList.remove('hidden');
            }
          });
        });
      }, 100);
    }
    
    // Create clean section matching company analysis style
    function createCleanSection(icon, title, content) {
      // Determine section type and styling
      let sectionClass = 'bg-white rounded-lg border border-gray-200 p-6';
      let headerClass = 'text-lg font-semibold text-gray-900 mb-4';
      
      // Special styling for certain sections
      if (title.includes('핵심') || title.includes('포인트')) {
        icon = '🎯';
      } else if (title.includes('기업') || title.includes('회사')) {
        icon = '🏢';
      } else if (title.includes('직무')) {
        icon = '💼';
      } else if (title.includes('역량') || title.includes('자격')) {
        icon = '💪';
      } else if (title.includes('자소서') || title.includes('전략')) {
        icon = '📝';
      } else if (title.includes('면접')) {
        icon = '💬';
      } else if (title.includes('평가') || title.includes('경쟁력')) {
        icon = '📊';
      }
      
      let html = `
        <div class="${sectionClass}">
          <h2 class="${headerClass}">
            ${icon} ${title}
          </h2>
          <div class="text-gray-700">
            ${formatCleanContent(title, content)}
          </div>
        </div>
      `;
      
      return html;
    }
    
    // Format content in clean style
    function formatCleanContent(title, content) {
      let html = '';
      
      // Special formatting based on section title
      if (title.includes('1. 공고 기본 정보')) {
        // Parse basic info with bullets
        html = content
          .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-gray-900">$1</strong>')
          .replace(/^•\s*(.*?)$/gm, '<li class="ml-4 mb-2">$1</li>')
          .replace(/(<li.*?<\/li>)/gs, '<ul class="list-disc list-inside space-y-1 text-gray-700 mb-3">$1</ul>')
          .replace(/\n\n/g, '</div><div class="mb-4">');
        html = '<div class="space-y-3">' + html + '</div>';
        
      } else if (title.includes('2. 핵심 특징 및 장점')) {
        // Format features with sub-sections
        const sections = content.split(/\*\*([^*]+)\*\*/);
        html = '<div class="space-y-4">';
        for (let i = 1; i < sections.length; i += 2) {
          const subtitle = sections[i];
          const subcontent = sections[i + 1] || '';
          html += `
            <div class="border-l-4 border-blue-500 pl-4">
              <h4 class="font-semibold text-gray-900 mb-2">${subtitle}</h4>
              <div class="text-gray-700 space-y-1">
                ${subcontent.replace(/^•\s*(.*?)$/gm, '<p class="ml-2">• $1</p>')}
              </div>
            </div>
          `;
        }
        html += '</div>';
        
      } else if (title.includes('3. 유의해야 할 점')) {
        // Format cautions with warning style
        const sections = content.split(/\*\*([^*]+)\*\*/);
        html = '<div class="space-y-4">';
        for (let i = 1; i < sections.length; i += 2) {
          const subtitle = sections[i];
          const subcontent = sections[i + 1] || '';
          html += `
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded">
              <h4 class="font-semibold text-gray-900 mb-2">${subtitle}</h4>
              <div class="text-gray-700 space-y-1">
                ${subcontent.replace(/^•\s*(.*?)$/gm, '<p class="ml-2">• $1</p>')}
              </div>
            </div>
          `;
        }
        html += '</div>';
        
      } else if (title.includes('4. 지원 전략')) {
        // Format strategy with actionable items
        const sections = content.split(/\*\*([^*]+)\*\*/);
        html = '<div class="space-y-4">';
        for (let i = 1; i < sections.length; i += 2) {
          const subtitle = sections[i];
          const subcontent = sections[i + 1] || '';
          html += `
            <div class="bg-green-50 border-l-4 border-green-500 p-4 rounded">
              <h4 class="font-semibold text-gray-900 mb-2">🎯 ${subtitle}</h4>
              <div class="text-gray-700 space-y-1">
                ${subcontent
                  .replace(/^•\s*\[([^\]]+)\]:\s*(.*)$/gm, '<p class="ml-2"><strong>$1:</strong> $2</p>')
                  .replace(/^•\s*(.*?)$/gm, '<p class="ml-2">• $1</p>')}
              </div>
            </div>
          `;
        }
        html += '</div>';
        
      } else if (title.includes('5. 요약')) {
        // Format summary with emphasis
        html = content
          .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-indigo-700">$1</strong>')
          .replace(/\n\n/g, '</p><p class="mb-3 text-gray-700 leading-relaxed">');
        html = '<div class="bg-indigo-50 p-5 rounded-lg"><p class="text-gray-700 leading-relaxed">' + html + '</p></div>';
        
      } else {
        // Default formatting for other sections
        const lines = content.split('\n').filter(line => line.trim());
        html += '<div class="space-y-3">';
        
        lines.forEach(line => {
          const match = line.match(/^\d+\.\s*(.+)/);
          if (match) {
            const [keyword, description] = match[1].split(':').map(s => s.trim());
            if (keyword) {
              html += `
                <div class="flex items-start gap-3">
                  <span class="text-blue-600 font-semibold">•</span>
                  <div>
                    <span class="font-medium">${keyword}</span>
                    ${description ? `<span class="text-gray-600 ml-2">${description}</span>` : ''}
                  </div>
                </div>
              `;
            }
          } else if (line.trim() && !line.includes('###')) {
            html += `<p>${line}</p>`;
          }
        });
        
        html += '</div>';
      }
      
      // Additional formatting for other content types
      if (!html && content) {
        // Default formatting if no special case matched
        const lines = content.split('\n').filter(line => line.trim());
        html = '<div class="space-y-2">';
        
        lines.forEach(line => {
          const match = line.match(/^[\-•]\s*\*?\*?([^:]+):?\*?\*?\s*(.*)$/);
          if (match) {
            html += `
              <div class="flex items-start gap-2">
                <span class="text-gray-400">•</span>
                <div>
                  <span class="font-medium text-gray-700">${match[1].trim()}:</span>
                  <span class="text-gray-600 ml-1">${match[2].trim() || '정보 없음'}</span>
                </div>
              </div>
            `;
          } else if (line.trim() && !line.includes('###')) {
            html += `<p class="text-gray-600">${line}</p>`;
          }
        });
        
        html += '</div>';
      }
      
      return html;
    }
    
    // This function is no longer needed as formatCleanContent handles all cases
    
    // Format general content in clean style
    function formatGeneralCleanContent(content) {
      return content
        .replace(/###\s*(.*?)$/gm, '<h4 class="font-medium text-gray-800 mt-3 mb-2">$1</h4>')
        .replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>')
        .replace(/^[\-•]\s*(.*?)$/gm, '<div class="flex items-start gap-2 mb-1"><span class="text-gray-400">•</span><span>$1</span></div>')
        .replace(/^\d+\.\s*(.*?)$/gm, '<div class="mb-2">$&</div>')
        .replace(/\n\n/g, '</p><p class="mb-3">');
    }
    
    // Create enhanced section with better UI
    function createEnhancedSection(title, content) {
      // Determine background color and icon based on content
      let bgColor = 'bg-white';
      let borderColor = 'border-gray-200';
      let headerBg = 'bg-gradient-to-r from-gray-50 to-gray-100';
      let icon = '📄';
      
      if (title.includes('기본 정보') || title.includes('기업') || title.includes('회사')) {
        bgColor = 'bg-gradient-to-br from-blue-50 to-indigo-50';
        borderColor = 'border-blue-200';
        headerBg = 'bg-gradient-to-r from-blue-600 to-indigo-600';
        icon = '🏢';
      } else if (title.includes('직무')) {
        bgColor = 'bg-gradient-to-br from-purple-50 to-pink-50';
        borderColor = 'border-purple-200';
        headerBg = 'bg-gradient-to-r from-purple-600 to-pink-600';
        icon = '💼';
      } else if (title.includes('핵심') || title.includes('키워드')) {
        bgColor = 'bg-gradient-to-br from-yellow-50 to-orange-50';
        borderColor = 'border-yellow-200';
        headerBg = 'bg-gradient-to-r from-yellow-600 to-orange-600';
        icon = '🎯';
      } else if (title.includes('역량') || title.includes('자격')) {
        bgColor = 'bg-gradient-to-br from-green-50 to-emerald-50';
        borderColor = 'border-green-200';
        headerBg = 'bg-gradient-to-r from-green-600 to-emerald-600';
        icon = '💪';
      } else if (title.includes('자소서') || title.includes('작성')) {
        bgColor = 'bg-gradient-to-br from-indigo-50 to-blue-50';
        borderColor = 'border-indigo-200';
        headerBg = 'bg-gradient-to-r from-indigo-600 to-blue-600';
        icon = '📝';
      } else if (title.includes('면접')) {
        bgColor = 'bg-gradient-to-br from-amber-50 to-yellow-50';
        borderColor = 'border-amber-200';
        headerBg = 'bg-gradient-to-r from-amber-600 to-yellow-600';
        icon = '💬';
      } else if (title.includes('평가') || title.includes('경쟁력')) {
        bgColor = 'bg-gradient-to-br from-cyan-50 to-blue-50';
        borderColor = 'border-cyan-200';
        headerBg = 'bg-gradient-to-r from-cyan-600 to-blue-600';
        icon = '📊';
      } else if (title.includes('인사이트') || title.includes('AI')) {
        bgColor = 'bg-gradient-to-br from-purple-50 to-indigo-50';
        borderColor = 'border-purple-200';
        headerBg = 'bg-gradient-to-r from-purple-600 to-indigo-600';
        icon = '🔮';
      }
      
      let html = `
        <div class="${bgColor} rounded-xl border ${borderColor} overflow-hidden shadow-sm hover:shadow-md transition-shadow">
          <div class="${headerBg} text-white px-5 py-3">
            <h3 class="text-lg font-bold flex items-center gap-2">
              <span class="text-xl">${icon}</span>
              ${title}
            </h3>
          </div>
          <div class="p-5">
            ${formatEnhancedContent(title, content)}
          </div>
        </div>
      `;
      
      return html;
    }
    
    // Create simplified section
    function createSimpleSection(icon, title, content) {
      let sectionIcon = '';
      
      // Assign simple icons
      if (title.includes('기업 정보')) {
        sectionIcon = '🏢';
      } else if (title.includes('직무 정보')) {
        sectionIcon = '💼';
      } else if (title.includes('핵심 키워드')) {
        sectionIcon = '🎯';
      } else if (title.includes('필수 역량')) {
        sectionIcon = '💪';
      } else if (title.includes('자소서')) {
        sectionIcon = '📝';
      } else if (title.includes('면접')) {
        sectionIcon = '💡';
      } else if (title.includes('경쟁력')) {
        sectionIcon = '📊';
      } else if (title.includes('AI 인사이트')) {
        sectionIcon = '✨';
      } else {
        sectionIcon = icon || '📄';
      }
      
      let html = `
        <div class="bg-white rounded-lg border border-gray-200 overflow-hidden">
          <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
            <h3 class="text-base font-semibold text-gray-900 flex items-center gap-2">
              <span>${sectionIcon}</span>
              ${title}
            </h3>
          </div>
          <div class="p-4">
            ${formatSectionContent(title, content)}
          </div>
        </div>
      `;
      
      return html;
    }
    
    // Format enhanced content with better styling
    function formatEnhancedContent(title, content) {
      let html = '<div class="prose prose-sm max-w-none">';
      
      // Special formatting based on title
      if (title.includes('기본 정보') || title.includes('기업') || title.includes('직무 정보')) {
        // Format as info cards
        const lines = content.split('\n').filter(line => line.trim());
        html += '<div class="grid gap-3">';
        
        lines.forEach(line => {
          const match = line.match(/^[\-•]\s*\*?\*?([^:]+):?\*?\*?\s*(.*)$/);
          if (match) {
            html += `
              <div class="flex items-start gap-3 bg-white/60 rounded-lg p-3">
                <div class="font-semibold text-gray-700 min-w-[120px]">${match[1].trim()}</div>
                <div class="text-gray-600">${match[2].trim() || '정보 없음'}</div>
              </div>
            `;
          } else if (line.trim()) {
            html += `<p class="text-gray-700">${line}</p>`;
          }
        });
        
        html += '</div>';
        
      } else if (title.includes('핵심') || title.includes('키워드') || title.includes('포인트')) {
        // Format as numbered cards with emphasis
        const items = content.match(/\d+\.\s*\*?\*?([^:\n]+):?\*?\*?\s*([^\n]+)/g) || [];
        
        if (items.length > 0) {
          html += '<div class="space-y-4">';
          
          items.forEach((item, index) => {
            const match = item.match(/\d+\.\s*\*?\*?([^:]+):?\*?\*?\s*(.+)/);
            if (match) {
              const colors = ['bg-blue-500', 'bg-purple-500', 'bg-green-500', 'bg-orange-500', 'bg-pink-500'];
              const color = colors[index % colors.length];
              
              html += `
                <div class="flex items-start gap-3">
                  <div class="${color} text-white w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm flex-shrink-0">
                    ${index + 1}
                  </div>
                  <div class="flex-1">
                    <div class="font-semibold text-gray-800 mb-1">${match[1].trim()}</div>
                    <div class="text-sm text-gray-600">${match[2].trim()}</div>
                  </div>
                </div>
              `;
            }
          });
          
          html += '</div>';
        } else {
          // Fallback formatting
          html += formatGeneralContent(content);
        }
        
      } else if (title.includes('역량') || title.includes('자격')) {
        // Format as requirement cards
        html += '<div class="space-y-4">';
        
        // Split into sections (기술적 역량, 소프트 스킬, etc.)
        const sections = content.split(/\*\*([^*]+)\*\*/g);
        
        for (let i = 1; i < sections.length; i += 2) {
          const sectionTitle = sections[i];
          const sectionContent = sections[i + 1];
          
          html += `
            <div class="bg-white/60 rounded-lg p-4">
              <h4 class="font-bold text-gray-800 mb-3 flex items-center gap-2">
                ${sectionTitle.includes('기술') ? '⚙️' : sectionTitle.includes('소프트') ? '🤝' : '✨'}
                ${sectionTitle}
              </h4>
              <div class="space-y-2">
          `;
          
          // Parse list items
          const items = sectionContent.match(/[\-•]\s*([^\n]+)/g) || [];
          items.forEach(item => {
            const text = item.replace(/^[\-•]\s*/, '');
            html += `
              <div class="flex items-start gap-2">
                <span class="text-green-500 mt-1">✓</span>
                <span class="text-gray-700 text-sm">${text}</span>
              </div>
            `;
          });
          
          html += '</div></div>';
        }
        
        html += '</div>';
        
      } else if (title.includes('면접')) {
        // Format interview questions specially
        const questions = content.match(/\d+\.\s*"([^"]+)"/g) || [];
        
        if (questions.length > 0) {
          html += '<div class="space-y-4">';
          
          questions.forEach((q, index) => {
            const match = q.match(/\d+\.\s*"([^"]+)"/);
            if (match) {
              html += `
                <div class="bg-amber-50 border-l-4 border-amber-400 p-4 rounded-r-lg">
                  <div class="flex items-start gap-3">
                    <span class="text-amber-600 font-bold">Q${index + 1}</span>
                    <div class="flex-1">
                      <p class="font-medium text-gray-800 mb-2">${match[1]}</p>
                      <p class="text-sm text-gray-600">💡 이 질문에 대비하여 구체적인 경험과 사례를 준비하세요</p>
                    </div>
                  </div>
                </div>
              `;
            }
          });
          
          html += '</div>';
        } else {
          html += formatGeneralContent(content);
        }
        
      } else if (title.includes('평가') || title.includes('경쟁력')) {
        // Format as evaluation metrics
        html += '<div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">';
        
        // Parse metrics
        const difficultyMatch = content.match(/지원 난이도[:\s]*([★☆]+|\d+\/5)/);
        const competitionMatch = content.match(/경쟁률[:\s]*([높음|중간|낮음|상|중|하])/);
        const timingMatch = content.match(/추천[^:]*[:\s]*([^\n]+)/);
        
        if (difficultyMatch) {
          const stars = difficultyMatch[1].includes('★') ? 
            difficultyMatch[1].match(/★/g).length : 
            parseInt(difficultyMatch[1]);
          
          html += `
            <div class="bg-gradient-to-br from-yellow-50 to-orange-50 rounded-lg p-4 text-center">
              <div class="text-sm text-gray-600 mb-2">지원 난이도</div>
              <div class="text-2xl">
                ${'⭐'.repeat(stars)}${'☆'.repeat(5 - stars)}
              </div>
              <div class="text-xs text-gray-500 mt-1">${stars}/5</div>
            </div>
          `;
        }
        
        if (competitionMatch) {
          const level = competitionMatch[1];
          const color = level.includes('높') || level === '상' ? 'red' : 
                       level.includes('중') ? 'yellow' : 'green';
          
          html += `
            <div class="bg-gradient-to-br from-${color}-50 to-${color}-100 rounded-lg p-4 text-center">
              <div class="text-sm text-gray-600 mb-2">예상 경쟁률</div>
              <div class="text-xl font-bold text-${color}-600">${level}</div>
            </div>
          `;
        }
        
        if (timingMatch) {
          html += `
            <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg p-4 text-center">
              <div class="text-sm text-gray-600 mb-2">추천 시기</div>
              <div class="text-base font-semibold text-blue-700">${timingMatch[1].trim()}</div>
            </div>
          `;
        }
        
        html += '</div>';
        
        // Add remaining content
        const remainingContent = content
          .replace(/지원 난이도[^\n]+/g, '')
          .replace(/경쟁률[^\n]+/g, '')
          .replace(/추천[^\n]+/g, '');
        
        if (remainingContent.trim()) {
          html += formatGeneralContent(remainingContent);
        }
        
      } else {
        // Default formatting
        html += formatGeneralContent(content);
      }
      
      html += '</div>';
      return html;
    }
    
    // Format general content
    function formatGeneralContent(content) {
      return content
        .replace(/###\s*(.*?)$/gm, '<h4 class="font-bold text-gray-800 mt-4 mb-2">$1</h4>')
        .replace(/####\s*(.*?)$/gm, '<h5 class="font-semibold text-gray-700 mt-3 mb-1">$1</h5>')
        .replace(/\*\*([^*]+)\*\*/g, '<strong class="text-gray-900">$1</strong>')
        .replace(/^[\-•]\s*(.*?)$/gm, '<li class="ml-4 mb-1 text-gray-700">• $1</li>')
        .replace(/^\d+\.\s*(.*?)$/gm, '<div class="ml-4 mb-2"><span class="font-semibold text-gray-800">$&</span></div>')
        .replace(/\n\n/g, '</p><p class="mb-3 text-gray-700">');
    }
    
    // Format section content based on type
    function formatSectionContent(title, content) {
      let html = '';
      
      if (title.includes('핵심 키워드')) {
        // Create keyword tags - simplified
        html += '<div class="flex flex-wrap gap-2 mb-3">';
        const keywords = content.match(/\d+\.\s*\*?\*?([^:]+):?\*?\*?\s*([^\n]+)/g) || [];
        keywords.forEach((keyword, index) => {
          const match = keyword.match(/\d+\.\s*\*?\*?([^:]+):?\*?\*?\s*(.+)/);
          if (match) {
            html += `
              <span class="inline-flex items-center px-3 py-1.5 bg-blue-100 text-blue-700 rounded-full text-sm font-medium">
                <span class="mr-1 font-bold">${index + 1}</span>
                ${match[1].trim()}
              </span>
            `;
          }
        });
        html += '</div>';
        
        // Add descriptions
        html += '<div class="space-y-1">';
        keywords.forEach(keyword => {
          const match = keyword.match(/\d+\.\s*\*?\*?([^:]+):?\*?\*?\s*(.+)/);
          if (match && match[2]) {
            html += `<p class="text-sm text-gray-600">• ${match[2]}</p>`;
          }
        });
        html += '</div>';
        
      } else if (title.includes('경쟁력 평가')) {
        // Create evaluation cards - simplified
        html += '<div class="grid grid-cols-3 gap-3">';
        
        // Parse difficulty
        const difficultyMatch = content.match(/지원 난이도:\s*(★+)/);
        if (difficultyMatch) {
          const stars = difficultyMatch[1].length;
          html += `
            <div class="text-center p-3 bg-gray-50 rounded-lg">
              <div class="text-xs text-gray-600 mb-1">지원 난이도</div>
              <div class="text-lg text-yellow-500">
                ${'★'.repeat(stars)}${'☆'.repeat(5 - stars)}
              </div>
            </div>
          `;
        }
        
        // Parse competition
        const competitionMatch = content.match(/경쟁률 예상:\s*(\S+)/);
        if (competitionMatch) {
          const level = competitionMatch[1];
          const colorClass = level === '높음' ? 'text-red-600' : level === '중간' ? 'text-yellow-600' : 'text-green-600';
          html += `
            <div class="text-center p-3 bg-gray-50 rounded-lg">
              <div class="text-xs text-gray-600 mb-1">경쟁률</div>
              <div class="text-base font-semibold ${colorClass}">${level}</div>
            </div>
          `;
        }
        
        // Parse timing
        const timingMatch = content.match(/추천 지원 시기:\s*(.+)/);
        if (timingMatch) {
          html += `
            <div class="text-center p-3 bg-gray-50 rounded-lg">
              <div class="text-xs text-gray-600 mb-1">추천 시기</div>
              <div class="text-sm font-medium text-gray-900">${timingMatch[1]}</div>
            </div>
          `;
        }
        
        html += '</div>';
        
      } else {
        // Default formatting - simplified
        html = '<div class="prose prose-sm max-w-none text-gray-700">';
        html += content
          .replace(/### (.*?)$/gm, '<h4 class="font-semibold text-gray-900 mt-3 mb-2">$1</h4>')
          .replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>')
          .replace(/^[•\-]\s*(.*?)$/gm, '<li class="ml-4">$1</li>')
          .replace(/^(\d+)\.\s*(.*?)$/gm, '<div class="ml-4 mb-1"><strong>$1.</strong> $2</div>')
          .replace(/\n\n/g, '</p><p class="mb-2">');
        
        if (!html.includes('<p')) {
          html = '<p class="mb-2">' + html + '</p>';
        }
        html += '</div>';
      }
      
      return html;
    }
    
    // Format general content
    function formatContent(content) {
      return content
        .replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>')
        .replace(/^[•\-]\s*(.*?)$/gm, '<li>$1</li>')
        .replace(/\n\n/g, '</p><p>');
    }
    
    // Save analysis function
    async function saveAnalysis() {
      if (!window.currentAnalysisId) {
        alert('저장할 분석 결과가 없습니다.');
        return;
      }
      
      console.log('Saving analysis ID:', window.currentAnalysisId);
      
      const saveBtn = document.getElementById('save-analysis-btn');
      const originalText = saveBtn.innerHTML;
      
      try {
        // Update button state
        saveBtn.disabled = true;
        saveBtn.innerHTML = '<svg class="animate-spin h-5 w-5 mr-2 inline" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>저장 중...';
        
        // Get CSRF token
        const csrfToken = document.querySelector('meta[name="csrf-token"]');
        const token = csrfToken ? csrfToken.content : '';
        
        const url = `/cover_letters/save_job_analysis/${window.currentAnalysisId}`;
        console.log('Saving to URL:', url);
        
        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': token,
            'Accept': 'application/json'
          },
          body: JSON.stringify({})
        });
        
        const data = await response.json();
        
        if (data.success) {
          // Success state
          saveBtn.innerHTML = '<svg class="w-5 h-5 mr-2 inline" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>저장 완료!';
          saveBtn.className = 'bg-green-500 text-white font-medium px-4 py-2 rounded-lg flex items-center gap-2 cursor-default';
          
          // Show saved analyses link
          setTimeout(() => {
            const viewSavedBtn = document.createElement('a');
            viewSavedBtn.href = '/cover_letters/saved_job_analyses';
            viewSavedBtn.className = 'ml-3 text-blue-600 hover:text-blue-700 underline text-sm';
            viewSavedBtn.textContent = '저장된 분석 보기 →';
            saveBtn.parentElement.appendChild(viewSavedBtn);
          }, 500);
        } else {
          throw new Error(data.error || '저장 실패');
        }
        
      } catch (error) {
        console.error('Save error:', error);
        alert('저장 중 오류가 발생했습니다: ' + error.message);
        saveBtn.innerHTML = originalText;
        saveBtn.disabled = false;
      }
    }
    
    // Setup other buttons
    const useForCoverLetterBtn = document.getElementById('use-for-cover-letter');
    const analyzeAnotherBtn = document.getElementById('analyze-another');
    const useForCoverLetterBtnBottom = document.getElementById('use-for-cover-letter-bottom');
    const analyzeAnotherBtnBottom = document.getElementById('analyze-another-bottom');
    
    if (useForCoverLetterBtn) {
      useForCoverLetterBtn.addEventListener('click', function() {
        window.location.href = '/cover_letters/new?from_job_analysis=true';
      });
    }
    
    if (analyzeAnotherBtn) {
      analyzeAnotherBtn.addEventListener('click', function() {
        urlInput.value = '';
        resultDiv.classList.add('hidden');
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    }
    
    // Setup bottom buttons (added after analysis)
    setTimeout(() => {
      const useBottom = document.getElementById('use-for-cover-letter-bottom');
      const anotherBottom = document.getElementById('analyze-another-bottom');
      
      if (useBottom) {
        useBottom.addEventListener('click', function() {
          window.location.href = '/cover_letters/new?from_job_analysis=true';
        });
      }
      
      if (anotherBottom) {
        anotherBottom.addEventListener('click', function() {
          urlInput.value = '';
          resultDiv.classList.add('hidden');
          window.scrollTo({ top: 0, behavior: 'smooth' });
        });
      }
    }, 1000);
  });
})();
</script>