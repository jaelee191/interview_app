<div class="min-h-screen bg-gray-50">
  <!-- Hero Section -->
  <div class="bg-white border-b border-gray-100">
    <div class="max-w-4xl mx-auto px-4 py-16">
      <div class="text-center">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">
          채용공고를 <span class="text-emerald-500">분석</span>합니다
        </h1>
        <p class="text-gray-600 text-lg">
          채용공고 URL을 입력하면 기업의 실제 니즈를 파악합니다
        </p>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="max-w-4xl mx-auto px-4 py-12">
    <!-- Features Grid -->
    <div class="grid md:grid-cols-3 gap-6 mb-12">
      <div class="bg-white rounded-lg p-6 border border-gray-100">
        <h3 class="font-semibold text-gray-900 mb-2">핵심 키워드</h3>
        <p class="text-sm text-gray-600">채용공고에서 중요한 키워드와 숨겨진 요구사항 파악</p>
      </div>
      
      <div class="bg-white rounded-lg p-6 border border-gray-100">
        <h3 class="font-semibold text-gray-900 mb-2">요구 역량</h3>
        <p class="text-sm text-gray-600">필수 역량과 우대사항을 체계적으로 정리</p>
      </div>
      
      <div class="bg-white rounded-lg p-6 border border-gray-100">
        <h3 class="font-semibold text-gray-900 mb-2">채용 맥락</h3>
        <p class="text-sm text-gray-600">기업의 현재 상황과 연결하여 채용 배경 해석</p>
      </div>
    </div>

    <!-- URL Input Form -->
    <div class="bg-white rounded-lg border border-gray-100 p-8">
      <form id="jobPostingForm" class="space-y-6">
        <!-- URL Input -->
        <div>
          <label for="job_url" class="block text-sm font-medium text-gray-700 mb-2">
            채용공고 URL
          </label>
          <input type="url" 
                 id="job_url" 
                 name="url"
                 placeholder="https://www.jobkorea.co.kr/..."
                 class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all"
                 value="<%= params[:url] || @auto_url %>">
        </div>
        
        <!-- Job Title Input -->
        <div>
          <label for="job_title" class="block text-sm font-medium text-gray-700 mb-2">
            직무명 <span class="text-gray-400 font-normal">(선택사항)</span>
          </label>
          <input type="text" 
                 id="job_title" 
                 name="job_title"
                 placeholder="예: 프론트엔드 개발자"
                 class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent transition-all">
        </div>
        
        <!-- Submit Button -->
        <button type="submit" 
                id="analyzeBtn"
                class="w-full bg-emerald-500 hover:bg-emerald-600 text-white font-medium py-3 rounded-lg transition-colors">
          <span id="btnText">분석 시작</span>
        </button>
      </form>
    </div>

    <!-- Results & Loading containers -->
    <div id="analysisResults" class="hidden mt-8"></div>
    <div id="loadingState" class="hidden bg-white rounded-lg border border-gray-100 p-8 mt-8">
      <div class="text-center">
        <!-- 로딩 스피너와 타이머 -->
        <div class="relative inline-block mb-4">
          <style>
            @keyframes spin {
              from { transform: rotate(0deg); }
              to { transform: rotate(360deg); }
            }
            .animate-spin-custom {
              animation: spin 1s linear infinite;
            }
          </style>
          <div class="relative w-20 h-20">
            <div class="absolute inset-0 border-4 border-gray-200 rounded-full"></div>
            <div class="absolute inset-0 border-4 border-emerald-500 border-t-transparent rounded-full animate-spin-custom"></div>
            <div class="absolute inset-0 flex items-center justify-center">
              <span id="loadingTimer" class="text-lg font-bold text-gray-700">0초</span>
            </div>
          </div>
        </div>
        
        <!-- 상태 메시지 -->
        <h3 class="text-xl font-bold text-gray-900 mb-2">채용공고를 분석하고 있습니다</h3>
        <p id="loadingStatus" class="text-gray-600 mb-4">페이지를 불러오는 중...</p>
        
        <!-- 프로그레스 바 -->
        <div class="max-w-sm mx-auto mb-4">
          <div class="bg-gray-200 rounded-full h-2 overflow-hidden">
            <div id="loadingProgress" class="bg-gradient-to-r from-emerald-400 to-emerald-600 h-full rounded-full transition-all duration-500" style="width: 10%"></div>
          </div>
          <div class="flex justify-between text-xs text-gray-500 mt-1">
            <span>시작</span>
            <span id="progressPercent">10%</span>
            <span>완료</span>
          </div>
        </div>
        
        <!-- 단계별 상태 -->
        <div class="flex justify-center space-x-8 mb-4">
          <div id="step1" class="flex items-center text-sm">
            <div class="w-2 h-2 bg-emerald-500 rounded-full mr-2 animate-pulse"></div>
            <span class="text-gray-600">크롤링</span>
          </div>
          <div id="step2" class="flex items-center text-sm">
            <div class="w-2 h-2 bg-gray-300 rounded-full mr-2"></div>
            <span class="text-gray-400">분석</span>
          </div>
          <div id="step3" class="flex items-center text-sm">
            <div class="w-2 h-2 bg-gray-300 rounded-full mr-2"></div>
            <span class="text-gray-400">생성</span>
          </div>
        </div>
        
        <!-- 팁 메시지 (순환) -->
        <div class="text-sm text-gray-500 italic">
          <p id="loadingTip">💡 사람인의 복사 방지 기능도 우회하여 분석합니다</p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('jobPostingForm');
  const analyzeBtn = document.getElementById('analyzeBtn');
  const btnText = document.getElementById('btnText');
  const loadingState = document.getElementById('loadingState');
  const resultsContainer = document.getElementById('analysisResults');
  
  <% if @auto_analyze %>
    setTimeout(() => form.dispatchEvent(new Event('submit')), 1000);
  <% end %>
  
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const url = document.getElementById('job_url').value.trim();
    const jobTitle = document.getElementById('job_title').value.trim();
    
    if (!url) {
      alert('채용공고 URL을 입력해주세요.');
      return;
    }
    
    // UI 상태 업데이트
    console.log('분석 시작 - 로딩 애니메이션 표시');
    analyzeBtn.disabled = true;
    btnText.textContent = '분석 중...';
    
    // 로딩 상태 강제 표시
    loadingState.style.display = 'block';
    loadingState.classList.remove('hidden');
    console.log('로딩 엘리먼트:', loadingState);
    console.log('display 상태:', window.getComputedStyle(loadingState).display);
    
    resultsContainer.classList.add('hidden');
    resultsContainer.innerHTML = '';
    
    // 타이머와 프로그레스 초기화
    let startTime = Date.now();
    let progressValue = 10;
    
    // 타이머 업데이트
    const timerInterval = setInterval(() => {
      const elapsed = Math.floor((Date.now() - startTime) / 1000);
      document.getElementById('loadingTimer').textContent = `${elapsed}초`;
    }, 100);
    
    // 프로그레스 업데이트
    const progressInterval = setInterval(() => {
      if (progressValue < 90) {
        progressValue += Math.random() * 10;
        progressValue = Math.min(progressValue, 90);
        document.getElementById('loadingProgress').style.width = `${progressValue}%`;
        document.getElementById('progressPercent').textContent = `${Math.floor(progressValue)}%`;
      }
    }, 500);
    
    // 단계별 상태 업데이트
    setTimeout(() => {
      document.getElementById('loadingStatus').textContent = 'AI가 채용공고를 분석 중...';
      document.querySelector('#step1 .w-2').classList.remove('animate-pulse');
      document.querySelector('#step1 .w-2').classList.add('bg-emerald-500');
      document.querySelector('#step2 .w-2').classList.remove('bg-gray-300');
      document.querySelector('#step2 .w-2').classList.add('bg-emerald-500', 'animate-pulse');
      document.querySelector('#step2 span').classList.remove('text-gray-400');
      document.querySelector('#step2 span').classList.add('text-gray-600');
    }, 3000);
    
    setTimeout(() => {
      document.getElementById('loadingStatus').textContent = '맞춤형 인사이트 생성 중...';
      document.querySelector('#step2 .w-2').classList.remove('animate-pulse');
      document.querySelector('#step3 .w-2').classList.remove('bg-gray-300');
      document.querySelector('#step3 .w-2').classList.add('bg-emerald-500', 'animate-pulse');
      document.querySelector('#step3 span').classList.remove('text-gray-400');
      document.querySelector('#step3 span').classList.add('text-gray-600');
    }, 6000);
    
    // 팁 메시지 순환
    const tips = [
      '💡 사람인의 복사 방지 기능도 우회하여 분석합니다',
      '📊 기업의 핵심 요구사항을 파악하고 있습니다',
      '🎯 맞춤형 자소서 전략을 수립 중입니다',
      '✨ AI가 최적의 키워드를 추출하고 있습니다',
      '🔍 경쟁력 있는 지원 전략을 분석 중입니다'
    ];
    let tipIndex = 0;
    const tipInterval = setInterval(() => {
      tipIndex = (tipIndex + 1) % tips.length;
      document.getElementById('loadingTip').textContent = tips[tipIndex];
    }, 3000);
    
    fetch('/cover_letters/analyze_job_posting', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({
        url: url,
        job_title: jobTitle,
        use_enhanced: 'true',
        use_python: 'true'
      })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('분석 응답:', data); // 디버깅용
      
      // 타이머와 인터벌 정리
      clearInterval(timerInterval);
      clearInterval(progressInterval);
      clearInterval(tipInterval);
      
      // 프로그레스 100% 완료
      document.getElementById('loadingProgress').style.width = '100%';
      document.getElementById('progressPercent').textContent = '100%';
      document.getElementById('loadingStatus').textContent = '분석 완료!';
      
      // 모든 단계 완료 표시
      document.querySelectorAll('.w-2').forEach(dot => {
        dot.classList.remove('animate-pulse', 'bg-gray-300');
        dot.classList.add('bg-emerald-500');
      });
      
      // 잠시 후 로딩 숨기기
      setTimeout(() => {
        loadingState.style.display = 'none';
        loadingState.classList.add('hidden');
        console.log('로딩 애니메이션 숨김');
      }, 500);
      
      if (data.success) {
        let analysisContent = '';
        
        // 마크다운 텍스트를 HTML로 변환하는 간단한 함수
        const parseMarkdown = (text) => {
          if (!text) return '';
          return text
            .replace(/### (.*)/g, '<h3 class="text-lg font-semibold mb-2 mt-4 text-gray-900">$1</h3>')
            .replace(/## (.*)/g, '<h2 class="text-xl font-semibold mb-3 mt-6 text-gray-900">$1</h2>')
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/- (.*)/g, '<li class="ml-4">$1</li>')
            .replace(/\n\n/g, '</p><p class="mb-4">')
            .replace(/^/, '<p class="mb-4">')
            .replace(/$/, '</p>')
            .replace(/<li/g, '<ul class="list-disc mb-4"><li')
            .replace(/<\/li>(?!<li)/g, '</li></ul>');
        };
        
        if (data.analysis_data && data.analysis_data.sections) {
          const sections = data.analysis_data.sections;
          analysisContent = `
            <div class="space-y-6">
              ${sections.company_overview ? `<div class="bg-white rounded-lg border border-gray-100 p-6">
                <h3 class="text-lg font-semibold mb-3 text-gray-900">기업 개요</h3>
                <div class="text-gray-700 prose prose-sm max-w-none">${sections.company_overview}</div>
              </div>` : ''}
              
              ${sections.job_context ? `<div class="bg-white rounded-lg border border-gray-100 p-6">
                <h3 class="text-lg font-semibold mb-3 text-gray-900">채용 배경</h3>
                <div class="text-gray-700 prose prose-sm max-w-none">${sections.job_context}</div>
              </div>` : ''}
              
              ${sections.job_requirements ? `<div class="bg-white rounded-lg border border-gray-100 p-6">
                <h3 class="text-lg font-semibold mb-3 text-gray-900">직무 요구사항</h3>
                <div class="text-gray-700 prose prose-sm max-w-none">${sections.job_requirements}</div>
              </div>` : ''}
              
              ${sections.preparation_strategy ? `<div class="bg-white rounded-lg border border-gray-100 p-6">
                <h3 class="text-lg font-semibold mb-3 text-gray-900">준비 전략</h3>
                <div class="text-gray-700 prose prose-sm max-w-none">${sections.preparation_strategy}</div>
              </div>` : ''}
            </div>
          `;
        } else if (typeof data.analysis === 'string') {
          // 마크다운 형식의 분석 결과를 HTML로 변환
          analysisContent = `<div class="bg-white rounded-lg border border-gray-100 p-6">
            <div class="prose prose-sm max-w-none text-gray-700">${parseMarkdown(data.analysis)}</div>
          </div>`;
        }
        
        resultsContainer.innerHTML = `
          <div class="space-y-6">
            <div class="bg-white rounded-lg border border-gray-100 p-6">
              <div class="flex items-center justify-between mb-4">
                <div>
                  <h2 class="text-xl font-semibold text-gray-900">${data.company_name || '기업'}</h2>
                  <p class="text-gray-600">${data.position || '직무'}</p>
                </div>
                <span class="px-3 py-1 bg-emerald-50 text-emerald-600 text-sm font-medium rounded-full">분석 완료</span>
              </div>
            </div>
            
            ${analysisContent}
            
            <div class="bg-white rounded-lg border border-gray-100 p-6">
              <a href="/cover_letters/interactive" 
                 class="inline-flex items-center px-6 py-3 bg-emerald-500 hover:bg-emerald-600 text-white font-medium rounded-lg transition-colors">
                이 분석으로 자소서 작성
              </a>
            </div>
          </div>
        `;
        resultsContainer.classList.remove('hidden');
      } else {
        resultsContainer.innerHTML = `
          <div class="bg-white border border-red-100 rounded-lg p-6">
            <h3 class="text-red-900 font-semibold mb-2">분석 실패</h3>
            <p class="text-red-700">${data.error || '알 수 없는 오류가 발생했습니다.'}</p>
          </div>
        `;
        resultsContainer.classList.remove('hidden');
      }
    })
    .catch(error => {
      // 타이머와 인터벌 정리
      clearInterval(timerInterval);
      clearInterval(progressInterval);
      clearInterval(tipInterval);
      
      loadingState.style.display = 'none';
      loadingState.classList.add('hidden');
      console.log('에러 발생 - 로딩 숨김');
      
      resultsContainer.innerHTML = `
        <div class="bg-white border border-red-100 rounded-lg p-6">
          <h3 class="text-red-900 font-semibold mb-2">네트워크 오류</h3>
          <p class="text-red-700">서버와 연결할 수 없습니다: ${error.message}</p>
        </div>
      `;
      resultsContainer.classList.remove('hidden');
    })
    .finally(() => {
      analyzeBtn.disabled = false;
      btnText.textContent = '분석 시작';
    });
  });
});
</script>